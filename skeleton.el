;; Skeleton .h headers
(define-skeleton insert-h-header
  "Inserts a epitech .h header file."
  ""
  '(setq str (file-name-sans-extension
              (file-name-nondirectory (buffer-file-name))))
  "/*\n"
  "** EPITECH PROJECT, 2021\n"
  "** "str".h\n"
  "** File description:\n"
  "** .h\n"
  "*/\n"
  "\n"
  "#ifndef __"(upcase str)"_H__\n"
  "# define __"(upcase str)"_H__\n"
  "\n"
  "\n"
  "\n"
  "#endif /* !__"(upcase str)"_H__ */\n")

;; Skeleton des Makefiles
(define-skeleton create-makefile
  "Create a Makefile."
  "\n"
  "##\n"
  "## EPITECH PROJECT, 2021\n"
  "## Makefile\n"
  "## File description:\n"
  "## Makefile\n"
  "##\n"
  "\n"
  "SRC_MAIN	=	\\\n"
  "\n"
  "SRC		=	\\\n"
  "\n"
  "SRC_TESTS	=	\\\n"
  "\n"
  "OBJ  		=	$(SRC:.c=.o)\n"
  "\n"
  "OBJ_MAIN	=	$(SRC_MAIN:.c=.o)\n"
  "\n"
  "NAME		=\n"
  "\n"
  "TESTS_NAME	=	unit_tests\n"
  "\n"
  "CPPFLAGS	=	-I./include\n"
  "\n"
  "CFLAGS		=	-Wall -Wextra\n"
  "\n"
  "LDFLAGS		=	-L./lib -lmy\n"
  "\n"
  "all:		$(NAME)\n"
  "\n"
  "libmy:\n"
  "	make -C lib/my/\n"
  "\n"
  "$(NAME): libmy $(OBJ) $(OBJ_MAIN)\n"
  "        gcc -o $(NAME) $(OBJ) $(OBJ_MAIN) $(LDFLAGS)\n"
  "\n"
  "tests_run: LDFLAGS += -lcriterion --coverage\n"
  "tests_run: fclean libmy\n"
  "        gcc -o $(TESTS_NAME) $(SRC) $(SRC_TESTS) $(LDFLAGS) $(CPPFLAGS) $(CFALGS)\n"
  "        ./$(TESTS_NAME) && gcovr . --html-details --html -o covr.html --exclude tests/\n"
  "\n"
  "clean:\n"
  "	   $(RM) $(OBJ)\n"
  "        $(RM) $(OBJ_MAIN)\n"
  "        $(RM) *.gc*\n"
  "        $(RM) covr*\n"
  "        make -C lib/my/ clean\n"
  "\n"
  "fclean: clean\n"
  "        $(RM) $(NAME)\n"
  "        $(RM) $(TESTS_NAME)\n"
  "        make -C lib/my/ fclean\n"
  "\n"
  "re: fclean clean all\n"
  "\n"
  ".PHONY:	fclean all clean tests_run\n")
